global:
  storageClass: longhorn
  imageRegistry: docker.io
existingObjstoreSecret: thanos-objstore-config
existingObjstoreSecretItems:
  - key: objstore.yml
    path: objstore.yml
query:
  enabled: true
  replicaCount: 1
  dnsDiscovery:
    enabled: true
    sidecarsService: thanos-sidecar
    sidecarsNamespace: monitoring
  stores:
    - thanos-store-gateway:10901
  resources:
    requests:
      memory: 256Mi
      cpu: 125m
    limits:
      memory: 512Mi
      cpu: 250m
  securityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 1001
    fsGroup: 1001
  service:
    ports:
      http: 9090
      grpc: 10901
queryFrontend:
  enabled: false
storegateway:
  enabled: true
  replicaCount: 1
  persistence:
    enabled: true
    storageClass: longhorn
    size: 20Gi
  resources:
    requests:
      memory: 512Mi
      cpu: 250m
    limits:
      memory: 1Gi
      cpu: 500m
  securityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 1001
    fsGroup: 1001
  config: |-
    type: FILESYSTEM
    config:
      directory: /data
compactor:
  enabled: true
  persistence:
    enabled: true
    storageClass: longhorn
    size: 50Gi
  resources:
    requests:
      memory: 1Gi
      cpu: 500m
    limits:
      memory: 2Gi
      cpu: 1000m
  securityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 1001
    fsGroup: 1001
  retentionResolutionRaw: 7d
  retentionResolution5m: 30d
  retentionResolution1h: 90d
  config: |-
    type: FILESYSTEM
    config:
      directory: /data
ruler:
  enabled: false
bucketweb:
  enabled: false
sidecar:
  enabled: false # Deployed with Prometheus stack
metrics:
  enabled: true
  serviceMonitor:
    enabled: true
    labels:
      release: prometheus-stack
