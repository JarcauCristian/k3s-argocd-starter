apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
spec:
  project: monitoring
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: 61.3.1
    helm:
      releaseName: kube-prometheus-stack
      values: "#\n# Common settings for the stack\n#\nglobal:\n  # This should be overridden with your actual domain\n  # e.g., via a config management tool or manually\n  domain: yourdomain.xyz\n\n#\n# Prometheus Configuration\n#\nprometheus:\n  prometheusSpec:\n    replicas: 1\n    # Adjust retention and storage size for homelab use\n    retention: 15d\n    storageSpec:\n      volumeClaimTemplate:\n        spec:\n          storageClassName: openebs-hostpath # IMPORTANT: Match your StorageClass\n          accessModes: [\"ReadWriteOnce\"]\n          resources:\n            requests:\n              storage: 10Gi\n    # Resource limits tuned for a small cluster\n    resources:\n      requests:\n        cpu: 250m\n        memory: 750Mi\n      limits:\n        cpu: 1\n        memory: 1.5Gi\n    # Scrape configs for other components will be added via ServiceMonitors\n\n#\n# Alertmanager Configuration\n#\nalertmanager:\n  enabled: true\n  alertmanagerSpec:\n    replicas: 1\n    storage:\n      volumeClaimTemplate:\n        spec:\n          storageClassName: openebs-hostpath # IMPORTANT: Match your StorageClass\n          accessModes: [\"ReadWriteOnce\"]\n          resources:\n            requests:\n              storage: 1Gi\n    resources:\n      requests:\n        cpu: 100m\n        memory: 100Mi\n      limits:\n        cpu: 200m\n        memory: 250Mi\n  ingress:\n    enabled: true\n    ingressClassName: cilium # IMPORTANT: Match your IngressClass\n    annotations:\n      cert-manager.io/cluster-issuer: cloudflare-cluster-issuer\n    hosts:\n      - \"alertmanager.{{ .Values.global.domain }}\"\n    paths:\n      - /\n    tls:\n      - secretName: alertmanager-tls\n        hosts:\n          - \"alertmanager.{{ .Values.global.domain }}\"\n\n#\n# Grafana Configuration\n#\ngrafana:\n  enabled: true\n  replicas: 1\n  adminPassword: \"prom-operator\" # CHANGE THIS default password\n  persistence:\n    enabled: true\n    type: pvc\n    storageClassName: openebs-hostpath # IMPORTANT: Match your StorageClass\n    accessModes: [\"ReadWriteOnce\"]\n    size: 2Gi\n  resources:\n    requests:\n      cpu: 100m\n      memory: 150Mi\n    limits:\n      cpu: 300m\n      memory: 300Mi\n  \n  # Pre-configure Loki datasource\n  additionalDataSources:\n    - name: Loki\n      type: loki\n      access: proxy\n      url: http://loki.monitoring.svc.cluster.local:3100 # Updated service name\n      jsonData:\n        maxLines: 1000\n\n  # Pre-load dashboards from the community\n  # These are sourced from grafana.com/grafana/dashboards/\n  dashboardProviders:\n    grafana-com-dashboards:\n      apiVersion: 1\n      providers:\n        - name: 'default'\n          orgId: 1\n          folder: ''\n          type: 'file'\n          disableDeletion: false\n          editable: true\n          options:\n            path: /var/lib/grafana/dashboards/default\n  dashboards:\n    default:\n      # Node Exporter Full Dashboard\n      node-exporter:\n        gnetId: 1860\n        revision: 36\n        datasource: Prometheus\n      # Kubernetes Cluster Overview\n      k8s-cluster:\n        gnetId: 3119\n        revision: 24\n        datasource: Prometheus\n      # Cilium Dashboard\n      cilium:\n        gnetId: 10922\n        revision: 23\n        datasource: Prometheus\n\n  ingress:\n    enabled: true\n    ingressClassName: cilium # IMPORTANT: Match your IngressClass\n    annotations:\n      cert-manager.io/cluster-issuer: cloudflare-cluster-issuer\n    hosts:\n      - \"grafana.{{ .Values.global.domain }}\"\n    paths:\n      - /\n    tls:\n      - secretName: grafana-tls\n        hosts:\n          - \"grafana.{{ .Values.global.domain }}\"\n\n#\n# Resource tuning for exporters\n#\nprometheus-node-exporter:\n  resources:\n    requests:\n      cpu: 50m\n      memory: 64Mi\n    limits:\n      cpu: 100m\n      memory: 128Mi\n\nkube-state-metrics:\n  resources:\n    requests:\n      cpu: 100m\n      memory: 128Mi\n    limits:\n      cpu: 200m\n      memory: 256Mi "
