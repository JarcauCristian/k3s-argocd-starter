# Kubecost Configuration
global:
  # Use your cluster name
  zone: "homelab"
  region: "local"

# Kubecost specific settings
kubecostModel:
  # Enable all metrics collection
  fullImageName: gcr.io/kubecost1/cost-model:latest
  
# Storage configuration
persistentVolume:
  enabled: true
  storageClass: longhorn
  size: 10Gi
  accessMode: ReadWriteOnce

# Prometheus configuration - critical for Kubecost to work
prometheus:
  # Use existing Prometheus if you have one, otherwise install bundled
  enabled: true
  server:
    persistentVolume:
      enabled: true
      storageClass: longhorn
      size: 8Gi
    retention: "15d"
    
  # Configure scraping for cost metrics
  serverFiles:
    prometheus.yml:
      scrape_configs:
        - job_name: 'kubecost'
          kubernetes_sd_configs:
            - role: pod
          relabel_configs:
            - source_labels: [__meta_kubernetes_pod_label_app]
              action: keep
              regex: cost-analyzer
        - job_name: 'kubecost-networking'
          kubernetes_sd_configs:
            - role: pod
          relabel_configs:
            - source_labels: [__meta_kubernetes_pod_label_app]
              action: keep
              regex: kubecost-network-costs

# RBAC - Essential for proper metrics collection
rbac:
  create: true

# Service Account
serviceAccount:
  create: true
  annotations: {}

# Network costs (optional but recommended)
networkCosts:
  enabled: true
  podMonitor:
    enabled: true

# Node exporter for node-level metrics
nodeExporter:
  enabled: true

# Grafana (disable if you have your own)
grafana:
  enabled: false

# ETL configuration for better performance
kubecostProductConfigs:
  # Improve asset query performance
  assetQueryConcurrency: 5
  # Configure workload distribution
  workloadDistribution:
    enabled: true
    # Reduce batch size if having memory issues
    batchSize: 1000

# Resource requests/limits to prevent OOM
resources:
  requests:
    cpu: 200m
    memory: 512Mi
  limits:
    cpu: 800m
    memory: 2Gi

# Pod security context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1001
  fsGroup: 1001

# Container security context  
securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1001
  capabilities:
    drop:
      - ALL

# Ingress (you already have httproute.yaml)
ingress:
  enabled: false

# Service configuration
service:
  type: ClusterIP
  port: 9090

# Tolerations for node scheduling if needed
tolerations: []

# Node selector
nodeSelector: {}

# Pod annotations
podAnnotations:
  cluster-autoscaler.kubernetes.io/safe-to-evict: "true"