# Promtail configuration for log collection
# Optimized for production workloads with security and performance considerations

promtail:
  # Server configuration
  server:
    http_listen_port: 9080
    grpc_listen_port: 9096
  
  # Client configuration for Loki
  clients:
    - url: http://loki-gateway.loki-stack.svc.cluster.local/loki/api/v1/push
  
  # Positions file for tracking log positions
  positions:
    filename: /var/lib/promtail/positions.yaml
  
  # Scrape configurations
  scrapeConfigs:
    # Kubernetes pod logs
    - job_name: kubernetes-pods
      kubernetes_sd_configs:
        - role: pod
      pipeline_stages:
        - docker: {}
        - match:
            selector: '{app="nginx"}'
            stages:
              - regex:
                  expression: '^(?P<time>\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z) (?P<level>\\w+) (?P<message>.*)$'
              - labels:
                  level:
                  time:
        - match:
            selector: '{app="searxng"}'
            stages:
              - regex:
                  expression: '^(?P<time>\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z) (?P<level>\\w+) (?P<message>.*)$'
              - labels:
                  level:
                  time:
        - match:
            selector: '{app="proxitok"}'
            stages:
              - regex:
                  expression: '^(?P<time>\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z) (?P<level>\\w+) (?P<message>.*)$'
              - labels:
                  level:
                  time:
      relabel_configs:
        - source_labels:
            - __meta_kubernetes_pod_annotation_prometheus_io_scrape
          action: keep
          regex: true
        - source_labels:
            - __meta_kubernetes_pod_annotation_prometheus_io_path
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels:
            - __address__
            - __meta_kubernetes_pod_annotation_prometheus_io_port
          action: replace
          regex: ([^:]+)(?::\\d+)?;(\\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels:
            - __meta_kubernetes_namespace
          action: replace
          target_label: namespace
        - source_labels:
            - __meta_kubernetes_pod_name
          action: replace
          target_label: pod
        - source_labels:
            - __meta_kubernetes_pod_container_name
          action: replace
          target_label: container
        - source_labels:
            - __meta_kubernetes_pod_name
            - __meta_kubernetes_pod_container_name
            - __meta_kubernetes_pod_container_id
          regex: (.+)
          target_label: __path__
          replacement: /var/log/pods/*$1/*.log
        - source_labels:
            - __meta_kubernetes_pod_uid
          target_label: __path__
          regex: (.+)
          replacement: /var/log/pods/*$1/*.log
  
  # Systemd journal logs
  - job_name: systemd-journal
    journal:
      json: false
      max_age: 12h
      path: /var/log/journal
      labels:
        job: systemd-journal
    relabel_configs:
      - source_labels:
          - __journal__systemd_unit
        target_label: unit
      - source_labels:
          - __journal__hostname
        target_label: hostname
  
  # Container logs
  - job_name: containers
    static_configs:
      - targets:
          - localhost
        labels:
          job: varlogs
          __path__: /var/log/containers/*.log
    pipeline_stages:
      - json:
          expressions:
            stream: stream
            attrs: attrs
            tag: attrs.tag
            time: time
            level: attrs.level
            msg: log
      - labels:
          level:
      - timestamp:
          source: time
          format: RFC3339Nano
      - output:
          source: msg
  
  # Resource allocation - Optimized for homelab
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 200m
      memory: 256Mi
  
  # Security context
  securityContext:
    runAsNonRoot: true
    runAsUser: 65534
    fsGroup: 65534
  
  # Persistence for positions file - Optimized for homelab
  persistence:
    enabled: true
    storageClassName: longhorn
    size: 500Mi
    accessModes:
      - ReadWriteOnce
  
  # Service account
  serviceAccount:
    create: true
    name: promtail
  
  # RBAC configuration
  rbac:
    create: true
    rules:
      - apiGroups:
          - ""
        resources:
          - nodes
          - nodes/proxy
          - services
          - endpoints
          - pods
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - extensions
        resources:
          - ingresses
        verbs:
          - get
          - list
          - watch
      - nonResourceURLs:
          - /metrics
        verbs:
          - get 