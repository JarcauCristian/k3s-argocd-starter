alloy:
  controller:
    type: daemonset
  configMap:
    create: true
    content: |
      // Kubernetes pod discovery
      discovery.kubernetes "pods" {
        role = "pod"
      }

      // Relabel to create proper labels and log paths
      discovery.relabel "pod_logs" {
        targets = discovery.kubernetes.pods.targets

        // Only scrape running pods
        rule {
          source_labels = ["__meta_kubernetes_pod_phase"]
          action = "keep"
          regex = "Running"
        }

        // Skip system namespaces (optional)
        rule {
          source_labels = ["__meta_kubernetes_namespace"]
          action = "drop"
          regex = "kube-system|kube-public|kube-node-lease"
        }

        // Create namespace label
        rule {
          source_labels = ["__meta_kubernetes_namespace"]
          action = "replace"
          target_label = "namespace"
        }

        // Create pod label
        rule {
          source_labels = ["__meta_kubernetes_pod_name"]
          action = "replace"
          target_label = "pod"
        }

        // Create container label
        rule {
          source_labels = ["__meta_kubernetes_pod_container_name"]
          action = "replace"
          target_label = "container"
        }

        // Create node label
        rule {
          source_labels = ["__meta_kubernetes_pod_node_name"]
          action = "replace"
          target_label = "node"
        }

        // Create job label (namespace/container)
        rule {
          source_labels = ["__meta_kubernetes_namespace", "__meta_kubernetes_pod_container_name"]
          action = "replace"
          target_label = "job"
          separator = "/"
          replacement = "$1/$2"
        }

        // Set the log file path - THIS IS CRITICAL
        rule {
          source_labels = ["__meta_kubernetes_pod_uid", "__meta_kubernetes_pod_container_name"]
          action = "replace"
          target_label = "__path__"
          separator = "/"
          replacement = "/var/log/pods/$1/$2/*.log"
        }
      }

      // Collect logs from Kubernetes
      loki.source.kubernetes "pods" {
        targets = discovery.relabel.pod_logs.output
        forward_to = [loki.process.pod_logs.receiver]
      }

      // Process logs and add cluster label
      loki.process "pod_logs" {
        forward_to = [loki.write.default.receiver]
        
        stage.static_labels {
          values = {
            cluster = "homelab",
          }
        }
      }

      // Write to Loki
      loki.write "default" {
        endpoint {
          url = "http://loki.loki.svc.cluster.local:3100/loki/api/v1/push"
        }
      }

# Enable RBAC - REQUIRED for Kubernetes API access
rbac:
  create: true

# Create service account
serviceAccount:
  create: true

# Mount required volumes for log access
controller:
  volumes:
    extra:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers  
        hostPath:
          path: /var/lib/docker/containers

  volumeMounts:
    extra:
      - name: varlog
        mountPath: /var/log
        readOnly: true
      - name: varlibdockercontainers
        mountPath: /var/lib/docker/containers
        readOnly: true

# Security context for accessing log files
controller:
  securityContext:
    runAsUser: 0
    runAsGroup: 0
    fsGroup: 0