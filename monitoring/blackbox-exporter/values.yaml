# Blackbox Exporter Configuration for Synthetic Monitoring
config:
  modules:
    # HTTP probes
    http_2xx:
      prober: http
      timeout: 5s
      http:
        valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
        valid_status_codes: []
        method: GET
        preferred_ip_protocol: "ip4"
        ip_protocol_fallback: false
    http_post_2xx:
      prober: http
      timeout: 5s
      http:
        valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
        method: POST
        preferred_ip_protocol: "ip4"
    http_basic_auth:
      prober: http
      timeout: 5s
      http:
        valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
        method: GET
        basic_auth:
          username: "username"
          password: "mysecret"
    # HTTPS probes
    https_2xx:
      prober: http
      timeout: 5s
      http:
        valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
        method: GET
        tls_config:
          insecure_skip_verify: false
        preferred_ip_protocol: "ip4"
    # TCP probes
    tcp_connect:
      prober: tcp
      timeout: 5s
      tcp:
        preferred_ip_protocol: "ip4"
    # ICMP probes
    icmp:
      prober: icmp
      timeout: 5s
      icmp:
        preferred_ip_protocol: "ip4"
    # DNS probes
    dns_udp:
      prober: dns
      timeout: 5s
      dns:
        query_name: "kubernetes.default.svc.cluster.local"
        query_type: "A"
        preferred_ip_protocol: "ip4"
    dns_tcp:
      prober: dns
      timeout: 5s
      dns:
        transport_protocol: "tcp"
        query_name: "kubernetes.default.svc.cluster.local"
        query_type: "A"
        preferred_ip_protocol: "ip4"
# Resource management
resources:
  requests:
    memory: 50Mi
    cpu: 50m
  limits:
    memory: 100Mi
    cpu: 100m
# Replica count
replicaCount: 1
# Service configuration
service:
  type: ClusterIP
  port: 9115
# Service monitor for Prometheus integration
serviceMonitor:
  enabled: true
  defaults:
    labels:
      release: kube-prometheus-stack
    interval: 30s
    scrapeTimeout: 30s
  targets:
    # Monitor key infrastructure endpoints
    - name: kubernetes-api
      url: https://kubernetes.default.svc.cluster.local
      module: https_2xx
      labels:
        job: "kubernetes-api"
    - name: prometheus
      url: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090/-/healthy
      module: http_2xx
      labels:
        job: "prometheus-health"
    - name: grafana
      url: http://kube-prometheus-stack-grafana.monitoring.svc.cluster.local/api/health
      module: http_2xx
      labels:
        job: "grafana-health"
    - name: alertmanager
      url: http://kube-prometheus-stack-alertmanager.monitoring.svc.cluster.local:9093/-/healthy
      module: http_2xx
      labels:
        job: "alertmanager-health"
    - name: loki
      url: http://loki-gateway.monitoring.svc.cluster.local/ready
      module: http_2xx
      labels:
        job: "loki-health"
    - name: tempo
      url: http://tempo.monitoring.svc.cluster.local:3100/ready
      module: http_2xx
      labels:
        job: "tempo-health"
    - name: minio
      url: http://minio.monitoring.svc.cluster.local:9000/minio/health/live
      module: http_2xx
      labels:
        job: "minio-health"
# Security context
securityContext:
  runAsNonRoot: true
  runAsUser: 65534
  readOnlyRootFilesystem: true
# Pod security context
podSecurityContext:
  fsGroup: 65534
# Annotations
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "9115"
# Labels
podLabels:
  app.kubernetes.io/part-of: observability-stack
# Additional environment variables
extraEnv: []
# Node affinity
nodeSelector: {}
# Tolerations
tolerations: []
# Pod disruption budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1
